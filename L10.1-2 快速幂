// 快速幂
class Solution {
    public int fib(int n) {
        if (n <= 1) return n;

        long[][] M = new long[][]{{1,1},{1,0}}; 
        long[][] sum = new long[][]{{1},{0}}; // 单位矩阵

        int x = n-1;
        while(x!=0) {
            // 二进制位为1
            if((x&1) == 1) {
                sum = matix_mul(M,sum);
            }
            M = matix_mul(M,M);
            x >>= 1; // 左移1位
        }
        return (int)sum[0][0]%1000000007;

    }

    // 矩阵乘法函数
    public long[][] matix_mul(long[][] a, long[][] b) {
        int r = a.length, c = b[0].length, t = b.length;
        long[][] res = new long[r][c];
        for(int i = 0; i < r; i++) {
            for(int j = 0; j < c; j++) {
                for(int k = 0; k < t; k++) {
                    res[i][j] += a[i][k]*b[k][j];
                    res[i][j] = res[i][j] % 1000000007;
                }
            }
        }
        return res;
    }
}
